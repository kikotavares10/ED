public T get(int pos){
        Node <T> curr=first;
        for(int i=0;i<pos;i++){
            curr=curr.getNext();
        }
        if(curr.getValue()!=null)
            return curr.getValue();
        else return null;
    }

    public T remove(int pos){
        if(isEmpty() || pos>=size || pos<0){
            return null;
        }
        Node <T> curr=first;
        size--;
        if (pos==0){
            T ret=curr.getValue();
            first=curr.getNext();
            return ret;
        }
        else{
            for(int i=0;i<pos-1;i++){
                curr=curr.getNext();
            }
            T ret = curr.getNext().getValue();
            curr.getNext().getValue();
            return ret;
        }
    }

    public SinglyLinkedList <T> copy(){
        SinglyLinkedList <T> list = new SinglyLinkedList<T> ();
        if (size==0){
            return null;
        }
        for(int i=0;i<size;i++){
            list.addLast(this.get(i));
        }
        return list;
    }

    public int count(T value){
        Node <T> curr=first;
        int count=0;
        while(curr.getValue()!=null){
            if(curr.getValue().equals(value)){
                count++;
            }
            curr=curr.getNext();
        }
        return count;
    }

    public void removeAll(T v){
        Node <T> curr=first;
        for(int i=0;i<size();i++){
            if(curr.getValue().equals(v)){
                i--;
            }
            curr=curr.getNext();
        }
    }